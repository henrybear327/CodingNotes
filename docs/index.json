[
{
	"uri": "https://henrybear327.github.io/CodingNotes/tools/hugo/",
	"title": "Hugo",
	"tags": [],
	"description": "My notes on Hugo",
	"content": "  Hugo Setup My setup notes for Hugo\n  Hugo Usage My Hugo handy refernece\n   "
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/",
	"title": "Coding Blog",
	"tags": [],
	"description": "",
	"content": " Coding Blog 歡迎來到我的程式隨筆～\n Contest Programming contest\n ITSA/PTC Monthly cotest\n October 11, 2017 October 11, 2017 ITSA PTC contest\n    Tools Great tools collection\n Hugo My notes on Hugo\n Hugo Setup My setup notes for Hugo\n  Hugo Usage My Hugo handy refernece\n     "
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/contest/itsa_ptc/",
	"title": "ITSA/PTC",
	"tags": [],
	"description": "Monthly cotest",
	"content": "  October 11, 2017 October 11, 2017 ITSA PTC contest\n   "
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/contest/",
	"title": "Contest",
	"tags": [],
	"description": "Programming contest",
	"content": "  ITSA/PTC Monthly cotest\n October 11, 2017 October 11, 2017 ITSA PTC contest\n    "
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/contest/itsa_ptc/oct2017/",
	"title": "October 11, 2017",
	"tags": ["ITSA", "PTC"],
	"description": "October 11, 2017 ITSA PTC contest",
	"content": " 心得 新隊伍一起的第一場正式練習，表現還算可以啦。只是很久沒三人共用一台電腦，實在有點卡卡的。\n討論熱烈，希望可以維持。\nITSA A 線性掃過去，遇到三的倍數就累加。\n1#include\u0026lt;bits/stdc++.h\u0026gt;23usingnamespacestd;45typedeflonglongll;67voidsolve()8{9intn;10scanf(\u0026#34;%d\u0026#34;,\u0026amp;n);1112llans=0;13for(inti=1;i\u0026lt;=n;i++)14if(i%3==0)15ans+=i;16printf(\u0026#34;%lld\\n\u0026#34;,ans);17}1819intmain()20{21intncase;22scanf(\u0026#34;%d\u0026#34;,\u0026amp;ncase);23while(ncase--)24solve();2526return0;27}  B 問問隊友 黃鈺程 陳煒杰\n1m=int(input())2for_inrange(m):3data=[0for_inrange(10001)]4n=int(input())5for_inrange(n):6a,b=map(int,input().split())7foriinrange(a,b):8data[i]=19print(sum(data)) \nC 基本上掌握對於 1-based 的 complete binary tree index 的性質即可:\n left child index = parent index * 2 right child index = parent index * 2 + 1  IO有點麻煩，各自實現吧！\n1#include\u0026lt;bits/stdc++.h\u0026gt;23usingnamespacestd;45typedeflonglongll;67#define lc(i) (i*2) 8#define rc(i) (i*2+1) 910voidsolve()11{12intC;13scanf(\u0026#34;%d\u0026#34;,\u0026amp;C);1415charinp[111];16scanf(\u0026#34;%s\u0026#34;,inp);1718intlen=strlen(inp);19// printf(\u0026#34;%s\\n\u0026#34;, inp); 2021inttree[111],idx=1;22for(inti=0;i\u0026lt;len;i++){23if(inp[i]==\u0026#39;(\u0026#39;){24intnum;25sscanf(inp+i+3,\u0026#34;%d\u0026#34;,\u0026amp;num);26// printf(\u0026#34;%s\\n\u0026#34;, inp + i); 2728tree[idx]=num;29idx++;30}31}3233/* 34for(int i = 1; i \u0026lt; idx; i++) 35printf(\u0026#34;%d %d\\n\u0026#34;, i, tree[i]); 36*/3738vector\u0026lt;string\u0026gt;ans;39for(inti=1;i\u0026lt;idx;i++){40if(lc(i)\u0026lt;idx\u0026amp;\u0026amp;abs(tree[i]-tree[lc(i)])\u0026lt;=C){41stringtmp=\u0026#34;\u0026#34;;42tmp+=\u0026#39;A\u0026#39;+(i-1);43tmp+=\u0026#39;A\u0026#39;+(lc(i)-1);4445ans.push_back(tmp);46}4748if(rc(i)\u0026lt;idx\u0026amp;\u0026amp;abs(tree[i]-tree[rc(i)])\u0026lt;=C){49stringtmp=\u0026#34;\u0026#34;;50tmp+=\u0026#39;A\u0026#39;+(i-1);51tmp+=\u0026#39;A\u0026#39;+(rc(i)-1);5253ans.push_back(tmp);54}5556}5758sort(ans.begin(),ans.end());59for(inti=0;i\u0026lt;(int)ans.size();i++){60printf(\u0026#34;%s%c\u0026#34;,ans[i].c_str(),i==(int)ans.size()-1?\u0026#39;\\n\u0026#39;:\u0026#39; \u0026#39;);61}62}6364intmain()65{66intncase;67scanf(\u0026#34;%d\u0026#34;,\u0026amp;ncase);68while(ncase--)69solve();7071return0;72} \nD 問問隊友 黃鈺程 陳煒杰\n1#include\u0026lt;bits/stdc++.h\u0026gt;2usingnamespacestd;34#define st first 5#define nd second 67typedefpair\u0026lt;int,int\u0026gt;pii;// \u0026lt;d, v\u0026gt; 8structEdge{9intto,w;10};1112constintMAX_V=1000;13constintINF=0x3f3f3f3f;1415intV;// V, Source 16vector\u0026lt;Edge\u0026gt;g[MAX_V];17intd[MAX_V][MAX_V];1819voiddijkstra(intS){20fill(d[S],d[S]+V,INF);21priority_queue\u0026lt;pii,vector\u0026lt;pii\u0026gt;,greater\u0026lt;pii\u0026gt;\u0026gt;pq;2223d[S][S]=0;24pq.push(pii(0,S));2526while(!pq.empty()){27piitop=pq.top();pq.pop();28intu=top.nd;2930if(d[S][u]\u0026lt;top.st)continue;3132// for (const Edge\u0026amp; e : g[u]) { 33for(size_ti=0;i\u0026lt;g[u].size();i++){34constEdge\u0026amp;e=g[u][i];35if(d[S][e.to]\u0026gt;d[S][u]+e.w){36d[S][e.to]=d[S][u]+e.w;37pq.push(pii(d[S][e.to],e.to));38}39}40}41}4243intmain(){44intN,M;45scanf(\u0026#34;%d\u0026#34;,\u0026amp;N);46scanf(\u0026#34;%d\u0026#34;,\u0026amp;M);47for(intu=0;u\u0026lt;M;u++){48for(intv=0;v\u0026lt;M;v++){49intw;scanf(\u0026#34;%d\u0026#34;,\u0026amp;w);50g[u].push_back(Edge{v,w});51}52}53V=M;54for(inti=0;i\u0026lt;N;i++){55intp,q;scanf(\u0026#34;%d %d\u0026#34;,\u0026amp;p,\u0026amp;q);56dijkstra(p);57printf(\u0026#34;%d\\n\u0026#34;,d[p][q]);58}59return0;60} \nE 比賽時想不出數學解，只好暴力去做，畢竟 $m, n$ 都至多 15而已。\n枚舉所有的可能放的數量，且只要枚舉 non-decreasing order 的數列來做排列組合即可。\n舉例而言，$m = 4, n = 2$的話，我們枚舉\n 1, 3 2, 2  但是 $3, 1$ 等等不枚舉，因為這個數列不是 non-decreasing order。\n有了數列 $a_1, a_2, \u0026hellip;, a_n$，之後就\u0026hellip;\n$C(m, a_1) * C(m - a_1, a_2) * \u0026hellip; * C(m - a_1 - a_2 - \u0026hellip; - a_{n - 1}, a_n)$\n記得，如果有多於一個相同的 $a_i$ 值，要除上 $(相同a_i個數)!$ ，因為我們不管排列方式。\n對於全部數列都累加上述算式即可。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2usingnamespacestd;34typedeflonglongll;56lldp[16][16];7llC(lla,llb){8if(dp[a][b]!=-1)9returndp[a][b];10llans=1;11for(inti=1;i\u0026lt;=b;i++){12ans=ans*(a-i+1);13ans=ans/i;14}15returndp[a][b]=ans;16}1718llans=0;1920llfactorial[16];2122intsz[16];2324inttotal=0;25voiddfs(intpartition,intdepth,intrem)26{27if(rem\u0026lt;=0)28return;2930if(depth==partition-1){31// get last partition 32if(depth!=0\u0026amp;\u0026amp;rem\u0026lt;sz[depth-1])33return;3435sz[depth]=rem;3637// for(int i = 0; i \u0026lt; partition; i++) 38// printf(\u0026#34;%d%c\u0026#34;, sz[i], i == partition - 1 ? \u0026#39;\\n\u0026#39; : \u0026#39; \u0026#39;); 39// get ans 40intsum=total;41lltmp=1;4243intacc[16]={0};44for(inti=0;i\u0026lt;partition;i++){45tmp*=C(sum,sz[i]);46acc[sz[i]]++;47sum-=sz[i];48}49// printf(\u0026#34;tmp = %lld\\n\u0026#34;, tmp); 5051for(inti=0;i\u0026lt;16;i++){52if(acc[i]\u0026gt;1)53tmp/=factorial[acc[i]];54}55// printf(\u0026#34;tmp = %lld\\n\u0026#34;, tmp); 5657ans+=tmp;5859return;60}6162inti;63if(depth==0){64i=1;65}else{66i=sz[depth-1];67}6869for(;i\u0026lt;=rem;i++){70if(depth!=0\u0026amp;\u0026amp;i\u0026lt;sz[depth-1])71continue;72sz[depth]=i;73dfs(partition,depth+1,rem-i);74}75}7677voidsolve(intnum_cnt,intpartition)78{79// printf(\u0026#34;%d %d\\n\u0026#34;, num_cnt, partition); 80ans=0;8182total=num_cnt;83dfs(partition,0,num_cnt);8485// printf(\u0026#34;ans = %lld\\n\u0026#34;, ans); 86printf(\u0026#34;%lld\\n\u0026#34;,ans);87}8889intmain(){90intTC;scanf(\u0026#34;%d\u0026#34;,\u0026amp;TC);91memset(dp,-1,sizeof(dp));9293factorial[1]=1;94for(inti=2;i\u0026lt;=15;i++){95factorial[i]=factorial[i-1]*i;96}9798while(TC--){99intm,n;100scanf(\u0026#34;%d,%d\u0026#34;,\u0026amp;m,\u0026amp;n);101102solve(m,n);103}104105return0;106} \nPTC A 問問隊友 _陳煒杰_，聽說範測看完就解了！\n1#include\u0026lt;bits/stdc++.h\u0026gt;2usingnamespacestd;34intmain(){5intn;6scanf(\u0026#34; %d\u0026#34;,\u0026amp;n);7for(inti=0;i\u0026lt;n;i++){8intx;9scanf(\u0026#34; %d\u0026#34;,\u0026amp;x);10printf(\u0026#34;%d\\n\u0026#34;,x*6+(x-1)*2);11}12return0;13} \nB y值其實完全沒有意義\u0026hellip;..\n主要的觀察是，最早結束的區間一定要釘釘子。所以，就 greedy 的找切點啦！\n對結尾排序後，線性掃過去，如果下個線段起點比目前的切點小，不處理; 反之，切點向後移且切點總數+1\n1#include\u0026lt;bits/stdc++.h\u0026gt;2usingnamespacestd;34#define sz(x) (int(x.size())) 56inlineintgetint(){7intinp;scanf(\u0026#34;%d\u0026#34;,\u0026amp;inp);returninp;8}910structSeg{11ints,t;12booloperator\u0026lt;(constSeg\u0026amp;k)const{13returnt\u0026lt;k.t;14}15};16vector\u0026lt;Seg\u0026gt;segs;1718intsolve(){19// sort(segs.begin(), segs.end(), [\u0026amp;](const Seg\u0026amp; a, const Seg\u0026amp; b) { 20// if (a.t == b.t) { 21// return a.s \u0026lt; b.s; 22// } 23// return a.t \u0026lt; b.t; 24// }); 25sort(segs.begin(),segs.end());2627intans=1;28Segcur=segs[0];29for(inti=1;i\u0026lt;sz(segs);i++){30// printf(\u0026#34;(%d, %d): \u0026#34;, segs[i].s, segs[i].t); 31if(segs[i].s\u0026lt;cur.t){32// puts(\u0026#34;c\u0026#34;); 33continue;34}35else{36ans++;37// printf(\u0026#34;%d\\n\u0026#34;, ans); 38cur=segs[i];39}40}41returnans;42}4344intmain(){45intTC=getint();46while(TC--){47segs.clear();4849intN=getint();50for(inti=0;i\u0026lt;N;i++){51intl=getint();52intx=getint();53inty=getint();5455segs.push_back(Seg{x,x+l});56}57printf(\u0026#34;%d\\n\u0026#34;,solve());58}59return0;60} \nC 問問隊友 黃鈺程 陳煒杰\n1#include\u0026lt;bits/stdc++.h\u0026gt;2usingnamespacestd;34inlineintgetint(){5intinp;scanf(\u0026#34;%d\u0026#34;,\u0026amp;inp);returninp;6}78structEdge{9intto,cap,rev;10Edge(inta,intb,intc){11to=a;12cap=b;13rev=c;14}15};1617constintINF=0x3f3f3f3f;18constintMAX_V=400;19vector\u0026lt;Edge\u0026gt;g[MAX_V];20intlevel[MAX_V];21intiter[MAX_V];2223voidadd_edge(intu,intv,intcap){24g[u].push_back((Edge){v,cap,(int)g[v].size()});25g[v].push_back((Edge){u,0,(int)g[u].size()-1});26}2728voidbfs(ints){29memset(level,-1,sizeof(level));30queue\u0026lt;int\u0026gt;q;3132level[s]=0;33q.push(s);3435while(!q.empty()){36intv=q.front();q.pop();37for(inti=0;i\u0026lt;int(g[v].size());i++){38constEdge\u0026amp;e=g[v][i];39if(e.cap\u0026gt;0\u0026amp;\u0026amp;level[e.to]\u0026lt;0){40level[e.to]=level[v]+1;41q.push(e.to);42}43}44}45}4647intdfs(intv,intt,intf){48if(v==t)returnf;49for(int\u0026amp;i=iter[v];i\u0026lt;int(g[v].size());i++){50Edge\u0026amp;e=g[v][i];51if(e.cap\u0026gt;0\u0026amp;\u0026amp;level[v]\u0026lt;level[e.to]){52intd=dfs(e.to,t,min(f,e.cap));53if(d\u0026gt;0){54e.cap-=d;55g[e.to][e.rev].cap+=d;56returnd;57}58}59}60return0;61}6263intmax_flow(ints,intt){// dinic 64intflow=0;65for(;;){66bfs(s);67if(level[t]\u0026lt;0)returnflow;68memset(iter,0,sizeof(iter));69intf;70while((f=dfs(s,t,INF))\u0026gt;0){71flow+=f;72}73}74}7576intcnt[5];7778intmain(){79intTC=getint();80while(TC--){81for(intu=0;u\u0026lt;MAX_V;u++){82g[u].clear();83}8485for(inti=0;i\u0026lt;5;i++){86cnt[i]=getint();87}8889intN=getint();90ints_super=N+10;91intt_super=N+11;92for(inti=0;i\u0026lt;5;i++){93add_edge(s_super,i,cnt[i]);94}9596for(inti=0;i\u0026lt;N;i++){97chars1[5],s2[5];98scanf(\u0026#34;%s %s\u0026#34;,s1,s2);99intc1=s1[0]-\u0026#39;A\u0026#39;;100intc2=s2[0]-\u0026#39;A\u0026#39;;101102add_edge(c1,i+5,1);103add_edge(c2,i+5,1);104add_edge(i+5,t_super,1);105}106107intf=max_flow(s_super,t_super);108if(f==N){109puts(\u0026#34;YES\u0026#34;);110}111else{112puts(\u0026#34;NO\u0026#34;);113}114}115return0;116} \n"
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tools/hugo/hugo-setup/",
	"title": "Hugo Setup",
	"tags": ["Hugo", "Setup"],
	"description": "My setup notes for Hugo",
	"content": "Hugo is a very well-designed static site generator. The user experience is way better than what I have tried so far. One of the good things about Hugo is that the config file is very clean! Also, the installation is easy, version controlling it is quite simple, and it\u0026rsquo;s easy to share the source code and let people create post PR!\n\nInstall and Setup Hugo The quickstart guide on Hugo is pretty comprehensive. Please check it out!\n Install latest hugo version  On Linux: sudo snap install hugo On Mac: brew install hugo  Create a hugo site: hugo new site [sitename] By default, no theme is installed, so you need to install one on your own!\ncd [sitename];\\ git init;\\ git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke;\\ # Edit your config.toml configuration file and add the Ananke theme. echo 'theme = \u0026quot;ananke\u0026quot;' \u0026gt;\u0026gt; config.toml  Using git submodule is a very good idea since we can keep track of the separate projects version controlled by git easily.\n Add some content: hugo new posts/my-first-post.md. Notice that the draft mode by default is true, so it won\u0026rsquo;t be published unless you change it to false.\n .rst will work!  Start the development server: hugo server -D\n Open config.toml\n customize the site URL, title, etc. .toml reference  In order to let Github Pages to parse from docs folder:\n add publishDir = \u0026quot;docs\u0026quot; to config.toml add publishDir: docs to config.yaml  Run hugo to build it!\n Push the generated static pages to Github, and wait for Github Pages to build! Enjoy!! It\u0026rsquo;s that easy!\n  Cloning Hugo Site from Github  Make sure you have hugo installed. Installation can be checked by running hugo help Clone the repo Run git submodule init on project root and then run git submodule update to get the theme Run hugo server! You are done setting up!  Switching to DocDock Theme + My Personal Tweaks This theme provides searching, tagging, and lot\u0026rsquo;s of shortcodes out-of-the-box. Worth a try!\n Get the theme code: git submodule add https://github.com/vjeantet/hugo-theme-docdock.git themes/docdock Use the theme\u0026rsquo;s config file: cp themes/docdock/exampleSite/config.toml .:  Better run cp config.toml config.toml.bak first  Open config.toml:  Set theme = \u0026quot;docdock\u0026quot; Comment out themesdir = \u0026quot;../..\u0026quot;  Create a _index.md document in the content folder  Don\u0026rsquo;t forget to create a _index.md with title: and head: front matter!  Update files in archetypes folder:  Check front matter format Tweak and add your own files! It\u0026rsquo;s will be very handy to have some of your own!  Create a _header.md page in content folder. Its content is what you get in the logo placeholder (top left of the screen).  MathJax support  Create a custom-head.html into a layouts/partials folder next to the content folder, this is where we should add the javascript code in every \u0026lt;head\u0026gt;. Paste the following code in to the file in order for MathJax and inline latex to work!\n\u0026lt;!-- Partial intended to be overwritten to add CSS --\u0026gt; \u0026lt;script type=\u0026quot;text/x-mathjax-config\u0026quot;\u0026gt; MathJax.Hub.Config({ tex2jax: {inlineMath: [['$','$'], ['\\\\(','\\\\)']]} }); \u0026lt;/script\u0026gt; \u0026lt;script type=\u0026quot;text/javascript\u0026quot; async src=\u0026quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=TeX-MML-AM_CHTML\u0026quot;\u0026gt; \u0026lt;/script\u0026gt;  Also, if you have Google Analytics tracking code, you can add it here.\n Check out the result $e = mc^2$ :)\n "
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tools/hugo/hugo-usage/",
	"title": "Hugo Usage",
	"tags": ["Hugo", "Setup"],
	"description": "My Hugo handy refernece",
	"content": " Useful Commands  hugo help: get Hugo documentation! hugo: generates the site to the destination folder hugo --cleanDestinationDir: remove files from destination not found in static directories  Creating a New Chapter  hugo new --kind chapter [path to file]/_index.md  Creating a New Article  Creater your own archetypes first! hugo new [path to post]/[post name].md: create a new post The one with the lower weight shows up first  Content Organization  All posts are contained in the content folder The folder hierarchy is the shape of the website\ncontent ├── level-one │ ├── level-two │ │ ├── level-three │ │ │ ├── level-four │ │ │ │ ├── _index.md │ │ │ │ ├── page-4-a.md │ │ │ │ ├── page-4-b.md │ │ │ │ └── page-4-c.md │ │ │ ├── _index.md │ │ │ ├── page-3-a.md │ │ │ ├── page-3-b.md │ │ │ └── page-3-c.md │ │ ├── _index.md │ │ ├── page-2-a.md │ │ ├── page-2-b.md │ │ └── page-2-c.md │ ├── _index.md │ ├── page-1-a.md │ ├── page-1-b.md │ └── page-1-c.md ├── _index.md └── page-top.md  Make sure that _index.md is present!\n  Tips for Writing Markdown  Hugo Docdock theme provides a lot of shortcodes! :) Here are a few useful ones:\n Codeblocks with line number  Use the following snippet  {{\u0026lt; highlight cpp \u0026quot;linenos=inline\u0026quot; \u0026gt;}} {{\u0026lt; / highlight \u0026gt;}}   Alerts\n{{% alert theme=\u0026quot;info\u0026quot; %}}**info**{{% /alert %}} {{% alert theme=\u0026quot;success\u0026quot; %}}**success**{{% /alert %}} {{% alert theme=\u0026quot;warning\u0026quot; %}}**warning**{{% /alert %}} {{% alert theme=\u0026quot;danger\u0026quot; %}}**danger**{{% /alert %}}  info success warning danger  Attachment\n markdown file: attachements must be place in a folder named like your page and ending with .files folder: attachements must be place in a nested files folder. Usage:\n{{%attachments title=\u0026quot;Related files\u0026quot; pattern=\u0026quot;.*(pdf|mp4)\u0026quot;/%}}   Expand\n{{% expand \u0026quot;Hint ?\u0026quot; %}}Here you go!{{% /expand%}}    Hint   Here you go!    Notice\n Must be padded to the left for the title to show up!  {{% notice note %}} Note {{% /notice %}}  Note\n {{% notice info %}} Info {{% /notice %}}  Info\n {{% notice tip %}} Tip {{% /notice %}}  Tip\n {{% notice warning %}} Warning {{% /notice %}}  Warning\n  panel\n success, default, primary, info, warning, danger  {{% panel theme=\u0026quot;success\u0026quot; header=\u0026quot;Title\u0026quot; %}}content{{% /panel %}}  Title content   revealjs\n  "
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tools/",
	"title": "Tools",
	"tags": [],
	"description": "Great tools collection",
	"content": "PR is welcomed! Feel free to create some if you want to :)\nCheers~\n Hugo My notes on Hugo\n Hugo Setup My setup notes for Hugo\n  Hugo Usage My Hugo handy refernece\n    "
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/_header/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " Coding Notes\n"
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/categories/competitive-programming/",
	"title": "Competitive Programming",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tags/hugo/",
	"title": "Hugo",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/categories/hugo/",
	"title": "Hugo",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tags/itsa/",
	"title": "Itsa",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tags/ptc/",
	"title": "Ptc",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tags/setup/",
	"title": "Setup",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]