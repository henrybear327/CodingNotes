[
{
	"uri": "https://henrybear327.github.io/CodingNotes/course/ccu_competitive_programming_2017_fall/",
	"title": "CCU Competitive Programming 2017 Fall",
	"tags": [],
	"description": "",
	"content": "  PC2 在 Mac 上的使用方法   Linear function   Exam A Problem B    "
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/contest/codeforces/educational/",
	"title": "Educational Rounds",
	"tags": [],
	"description": "Basic stuff, but still can&#39;t solve it QQ",
	"content": "  Round 30    "
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tools/hugo/",
	"title": "Hugo",
	"tags": [],
	"description": "My notes on Hugo",
	"content": "  Hugo Setup   Hugo Usage    "
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/",
	"title": "Coding Blog",
	"tags": [],
	"description": "",
	"content": " Coding Blog 歡迎來到我的程式隨筆～\n Contest  Codeforces  Educational Rounds  Round 30    Rated Contests  Round 441    Gym  2016-2017 ACM-ICPC, Egyptian Collegiate Programming Contest (ECPC 16)     ITSA/PTC  October 11, 2017    Onsite competitions  NCPC 2016 Final   NCPC 2017 Preliminary Round     Course Notes  CCU Competitive Programming 2017 Fall  PC2 在 Mac 上的使用方法   Linear function   Exam A Problem B     Tools  Hugo  Hugo Setup   Hugo Usage      "
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/contest/codeforces/contest/r441/",
	"title": "Round 441",
	"tags": ["Codeforces", "Implementation", "Union Find", "Enumeration"],
	"description": "",
	"content": "Solved 4 in virtual contest\u0026hellip; What the pity\u0026hellip; Could have gotten my rating rasied lol\n\nA. Trip For Meal Just do simulation.\n1#include\u0026lt;bits/stdc++.h\u0026gt;23usingnamespacestd;45intmain()6{7intn;8scanf(\u0026#34;%d\u0026#34;,\u0026amp;n);910intd[3];11for(inti=0;i\u0026lt;3;i++)12scanf(\u0026#34;%d\u0026#34;,\u0026amp;d[i]);1314intans=0,cur=0,pos=0;15for(inti=1;i\u0026lt;n;i++){16if(pos==0){17cur=d[0]\u0026lt;d[1]?0:1;18pos=d[0]\u0026lt;d[1]?1:2;19}elseif(pos==1){20cur=d[0]\u0026lt;d[2]?0:2;21pos=d[0]\u0026lt;d[2]?0:2;22}else{23cur=d[1]\u0026lt;d[2]?1:2;24pos=d[1]\u0026lt;d[2]?0:1;25}2627ans+=d[cur];28}2930printf(\u0026#34;%d\\n\u0026#34;,ans);3132return0;33}  B. Divisiblity of Differences   Hint ?   Think about the remainder!\n    Solution ?   For every remainder after under modulo m, check if any of them have more then $k$ elements in it.\nSince the only way of constructing a set, which satisfies the condition that the difference between any two of them is divisible by m, is taking elements that has the same remainder.\n  1#include\u0026lt;bits/stdc++.h\u0026gt;23usingnamespacestd;45vector\u0026lt;int\u0026gt;rem[100100];6intmain()7{8intn,k,m;9scanf(\u0026#34;%d %d %d\u0026#34;,\u0026amp;n,\u0026amp;k,\u0026amp;m);1011for(inti=0;i\u0026lt;n;i++){12intnum;13scanf(\u0026#34;%d\u0026#34;,\u0026amp;num);1415rem[num%m].push_back(num);16}1718// i = 0 19for(inti=0;i\u0026lt;m;i++){20if((int)rem[i].size()\u0026gt;=k){21printf(\u0026#34;Yes\\n\u0026#34;);22for(intj=0;j\u0026lt;k;j++)23printf(\u0026#34;%d \u0026#34;,rem[i][j]);24return0;25}26}27printf(\u0026#34;No\\n\u0026#34;);2829return0;30}  C. Classroom Watch   Hint ?   What are the possible values of the sum of digits of a given number?\n    Solution ?   The range of the sum of digits of a given number is $1$ ~ $9*9$ ($1$ ~ $999999999$).\nAssume $x = n - sum\\ of\\ digits\\ of\\ n$, where $sum\\ of\\ digits\\ of\\ n$ is in range $[1, 81]$. Using the above property, we can check for all x + sum_of_digits(x) and see if any of them equals to n. If yes, add that the the answer set!\n  1#include\u0026lt;bits/stdc++.h\u0026gt;23usingnamespacestd;45intmain()6{7intn;8scanf(\u0026#34;%d\u0026#34;,\u0026amp;n);910set\u0026lt;int\u0026gt;ans;11for(inti=1;i\u0026lt;=81;i++){12if(n-i\u0026gt;=1){13intnum=n-i;14intsum=n-i;15while(num\u0026gt;0){16sum+=num%10;17num/=10;18}1920if(sum==n)21ans.insert(n-i);22}23}2425printf(\u0026#34;%d\\n\u0026#34;,(int)ans.size());26for(autoi:ans)27printf(\u0026#34;%d \u0026#34;,i);2829return0;30}  D. Sorting the Coins   Hint ?   What will the end result look like?\n    Solution ?   Since the end result will look like OOO...XXX..., and during the simulation one can observe that the total number of X in the O..X..O..X.. sequence, excluding the Xs in the end, is what will affect the hardness value. You can circle all XX..OOO and observe them. For every pass, total number of circled groups will decrease by 1.\nFor example, if we have OOOXOOXOXX, we will need 2 passes to adjust and 1 pass of checking. So the hardness value is $4 - 2 + 1$. 4 is the total number of X in the sequence, $-2$ is the Xs that is not in the end, and $+1$ is for the checking pass.\n  1#include\u0026lt;bits/stdc++.h\u0026gt;23usingnamespacestd;45structUFDS{6intpar[300100];7voidinit(){8memset(par,-1,sizeof(par));9}1011introot(intx){12returnpar[x]\u0026lt;0?x:par[x]=root(par[x]);13}1415voidmerge(intx,inty){16x=root(x);17y=root(y);1819if(x==y)20return;21if(par[x]\u0026gt;par[y])22swap(x,y);23par[x]+=par[y];24par[y]=x;25}2627intsz(intx){28return-par[root(x)];29}30}uf;3132intmain()33{34intn;35scanf(\u0026#34;%d\u0026#34;,\u0026amp;n);36uf.init();3738boolhas[n];39memset(has,false,sizeof(has));40printf(\u0026#34;1 \u0026#34;);41for(inti=1;i\u0026lt;=n;i++){42intpos;43scanf(\u0026#34;%d\u0026#34;,\u0026amp;pos);44pos--;4546if(pos-1\u0026gt;=0){47if(has[pos-1]==true){48uf.merge(pos-1,pos);49}50}5152if(pos+1\u0026lt;n){53if(has[pos+1]==true){54uf.merge(pos+1,pos);55}56}5758has[pos]=true;5960if(has[n-1]==false)61printf(\u0026#34;%d \u0026#34;,i+1);62else63printf(\u0026#34;%d \u0026#34;,i-uf.sz(n-1)+1);64}6566return0;67} \n"
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/contest/codeforces/contest/",
	"title": "Rated Contests",
	"tags": [],
	"description": "",
	"content": "  Round 441    "
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/course/ccu_competitive_programming_2017_fall/pc2/",
	"title": "PC2 在 Mac 上的使用方法",
	"tags": ["PC2", "Linux", "Mac"],
	"description": "",
	"content": "PC2 其實是可以在 Mac 上面執行的！不用開啟 Windows 一樣可以上傳 judge 交作業歐～\n\n流程 首先，請先開啟終端機。\n 安裝 Homebrew: 在終端機中執行 /usr/bin/ruby -e \u0026quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\u0026quot;。  Homebrew 就像是 Linux 的 apt-get，要安裝東西就 brew install [package name] 就對啦！  安裝 Java: 在終端機中執行 brew cask install java，他會幫你裝好並設定好 Java 的路徑 下載上課用的 $PC2$ 軟體資料夾，放在你喜歡的地方。 打開 $PC2$ 的資料夾，裡面會有一個 bin 資料夾。其中，會有一個 pc2team 的檔案。將該檔案拖曳至終端機中，按下enter，等待片刻就好啦！  將檔案拖曳至終端機，應該會看到類似這樣的字串出現在終端機中：/Users/[你的Mac目前使用者帳號]/[中/間/一/堆/路/徑/...]/pc2-9.4.1_student/bin/pc2team\n  "
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/contest/codeforces/gym/ecpc16/",
	"title": "2016-2017 ACM-ICPC, Egyptian Collegiate Programming Contest (ECPC 16)",
	"tags": ["Codeforces", "Gym", "BFS"],
	"description": "",
	"content": "Problem statements\n3 easy problems, but the rest are hard.\n\nB 3 cases:\n x-axis overlapping y-axis overlapping no overlapping  The case that might got you is the case of rectangles touching on the y-axis. Try this case:\n1 4 200 100 20 80 10 1 80 20 20 0 20 90 120 1 30 8 150 0  The answer is 60.198039.\n1#include\u0026lt;bits/stdc++.h\u0026gt;23usingnamespacestd;45#define N 111 6#define MAX 1e18 78typedeflonglongll;910structPt{11intx,y;12};1314structRect{15PtupperLeft,lowerRight;16intk;17};1819doubledist(intx1,inty1,intx2,inty2)20{21lldx=x2-x1;22lldy=y2-y1;23returnsqrt(dx*dx+dy*dy);24}2526voidsolve()27{28intn,l,u;29scanf(\u0026#34;%d %d %d\u0026#34;,\u0026amp;n,\u0026amp;l,\u0026amp;u);3031// read 32doublem[N][N];33for(inti=0;i\u0026lt;N;i++)34for(intj=0;j\u0026lt;N;j++)35m[i][j]=(i==j?0:MAX);3637vector\u0026lt;Rect\u0026gt;rect;38rect.push_back({{0,0},{u,0},0});// bottom 39rect.push_back({{0,l},{u,l},0});// top 40m[0][1]=m[1][0]=l;4142for(inti=0;i\u0026lt;n;i++){43inth,w,d,k;44scanf(\u0026#34;%d %d %d %d\u0026#34;,\u0026amp;h,\u0026amp;w,\u0026amp;d,\u0026amp;k);4546if(k==0){47PtupperLeft={0,h+d};48PtlowerRight={w,d};49rect.push_back({upperLeft,lowerRight,k});50}else{51PtupperLeft={u-w,h+d};52PtlowerRight={u,d};53rect.push_back({upperLeft,lowerRight,k});54}5556m[i+2][1]=m[1][i+2]=l-h-d;57m[i+2][0]=m[0][i+2]=d;58}5960// build 61intsz=rect.size();62for(inti=2;i\u0026lt;sz;i++){63for(intj=2;j\u0026lt;sz;j++){64if(i==j)65continue;6667int\u0026amp;ax=rect[i].upperLeft.x;68int\u0026amp;ay=rect[i].upperLeft.y;69int\u0026amp;bx=rect[i].lowerRight.x;70int\u0026amp;by=rect[i].lowerRight.y;71int\u0026amp;ki=rect[i].k;7273int\u0026amp;cx=rect[j].upperLeft.x;74int\u0026amp;cy=rect[j].upperLeft.y;75int\u0026amp;dx=rect[j].lowerRight.x;76int\u0026amp;dy=rect[j].lowerRight.y;77int\u0026amp;kj=rect[j].k;7879doubleval;80if(ax\u0026lt;=cx\u0026amp;\u0026amp;cx\u0026lt;=bx){// case1 - 1 81if(ki!=kj\u0026amp;\u0026amp;cx==bx\u0026amp;\u0026amp;by\u0026lt;=cy\u0026amp;\u0026amp;cy\u0026lt;=ay)// touching case 82val=0;83else84val=min(abs(ay-dy),abs(by-cy));85}elseif(ax\u0026lt;=dx\u0026amp;\u0026amp;dx\u0026lt;=bx){// case1 - 2 86if(ki!=kj\u0026amp;\u0026amp;dx==bx\u0026amp;\u0026amp;by\u0026lt;=dy\u0026amp;\u0026amp;dy\u0026lt;=ay)// touching case 87val=0;88else89val=min(abs(ay-dy),abs(by-cy));90}elseif(by\u0026lt;=cy\u0026amp;\u0026amp;cy\u0026lt;=ay){// case2 - 1 91val=abs(bx-cx);92}elseif(by\u0026lt;=dy\u0026amp;\u0026amp;dy\u0026lt;=ay){// case2 - 2 93val=abs(bx-cx);94}else{// case3 95val=min(dist(bx,ay,cx,dy),dist(bx,by,cx,cy));96/* 97if(ay \u0026lt; dy) { 98val = dist(bx, ay, cx, dy); 99} else { 100val = dist(bx, by, cx, cy); 101} 102*/103}104105m[i][j]=min(m[i][j],val);106m[j][i]=min(m[j][i],val);107//printf(\u0026#34;%d %d %.6f\\n\u0026#34;, i, j, m[i][j]); 108//printf(\u0026#34;%d %d, %d %d, %d %d, %d %d\\n\u0026#34;, ax, ay, bx, by, cx, cy, dx, dy); 109}110}111112// solve 113for(intk=0;k\u0026lt;sz;k++)114for(inti=0;i\u0026lt;sz;i++)115for(intj=0;j\u0026lt;sz;j++){116if(m[i][j]\u0026gt;1e9)117continue;118m[i][j]=min(m[i][j],m[i][k]+m[k][j]);119}120121printf(\u0026#34;%.6f\\n\u0026#34;,m[0][1]);122}123124intmain()125{126freopen(\u0026#34;street.in\u0026#34;,\u0026#34;r\u0026#34;,stdin);127128intncase;129scanf(\u0026#34;%d\u0026#34;,\u0026amp;ncase);130131while(ncase--)132solve();133134return0;135}  D $C(n, m)$\n1lude\u0026lt;bits/stdc++.h\u0026gt;23usingnamespacestd;45typedeflonglongll;6lldp[30][30];7llC(lla,llb)8{9if(dp[a][b]!=-1)10returndp[a][b];11llans=1;12for(inti=1;i\u0026lt;=b;i++){13ans=ans*(a-i+1);14ans=ans/i;15}16returndp[a][b]=ans;17}1819voidsolve()20{21intn,m;22scanf(\u0026#34;%d %d\u0026#34;,\u0026amp;n,\u0026amp;m);2324printf(\u0026#34;%lld\\n\u0026#34;,C(n,m));25}2627intmain()28{29freopen(\u0026#34;popcorn.in\u0026#34;,\u0026#34;r\u0026#34;,stdin);30intncase;31scanf(\u0026#34;%d\u0026#34;,\u0026amp;ncase);32memset(dp,-1,sizeof(dp));33while(ncase--)34solve();3536return0;37} \nE BFS. Add edges, but reverse them!\n1#include\u0026lt;bits/stdc++.h\u0026gt;23usingnamespacestd;45#define N 100010 6vector\u0026lt;int\u0026gt;g[N];78voidsolve()9{10intn;11scanf(\u0026#34;%d\u0026#34;,\u0026amp;n);1213for(inti=0;i\u0026lt;n;i++)14g[i].clear();1516for(inti=0;i\u0026lt;n;i++){17intd;18scanf(\u0026#34;%d\u0026#34;,\u0026amp;d);1920intnxt=i+d;21intpre=i-d;2223if(nxt\u0026lt;n)24g[nxt].push_back(i);25if(pre\u0026gt;=0)26g[pre].push_back(i);27}2829queue\u0026lt;int\u0026gt;q;30intdist[N];31memset(dist,-1,sizeof(dist));32dist[n-1]=0;33q.push(n-1);3435while(q.empty()==false){36intu=q.front();37q.pop();3839for(autov:g[u]){40if(dist[v]==-1){41dist[v]=dist[u]+1;42q.push(v);43}44}45}4647for(inti=0;i\u0026lt;n;i++)48printf(\u0026#34;%d\\n\u0026#34;,dist[i]);49}5051intmain()52{53freopen(\u0026#34;jumping.in\u0026#34;,\u0026#34;r\u0026#34;,stdin);5455intncase;56scanf(\u0026#34;%d\u0026#34;,\u0026amp;ncase);5758while(ncase--){59solve();60}6162return0;63} \n"
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/contest/codeforces/educational/30/",
	"title": "Round 30",
	"tags": ["Codeforces", "Educational Round", "Observation"],
	"description": "",
	"content": "A contest full of frustration\n\nA. Chores 1#include\u0026lt;bits/stdc++.h\u0026gt;23usingnamespacestd;45typedeflonglongll;6typedefpair\u0026lt;int,int\u0026gt;ii;78intmain()9{10intn,k,x;11scanf(\u0026#34;%d %d %d\u0026#34;,\u0026amp;n,\u0026amp;k,\u0026amp;x);1213inttot=0;14for(inti=0;i\u0026lt;n;i++){15intnum;16scanf(\u0026#34;%d\u0026#34;,\u0026amp;num);1718if(i\u0026lt;n-k)19tot+=num;20else21tot+=x;22}23printf(\u0026#34;%d\\n\u0026#34;,tot);2425return0;26}  B. Balanced Substring A pretty good one!\nBinary search won\u0026rsquo;t work, don\u0026rsquo;t be tricked.\nWe can keep a $sum$, initialized with $0$. If we encounter a $0$, we subtract the $sum$ by 1, otherwise, we add $1$ to $sum$.\nIt is easy to see that whenever you have the same $sum$, this implies that the number of $+1$ and $-1$ is the same between the interval! Using this property we can get the maximum balanced substring.\nKeep in mind of a tricky case, $01101010$ :)\n1#include\u0026lt;bits/stdc++.h\u0026gt;23usingnamespacestd;45typedeflonglongll;6typedefpair\u0026lt;int,int\u0026gt;ii;78intmain()9{10intlen;11charinp[100010];12scanf(\u0026#34;%d\u0026#34;,\u0026amp;len);13scanf(\u0026#34;%s\u0026#34;,inp+1);// case 01101010 1415intsum=0;16map\u0026lt;int,int\u0026gt;loc;17intans=0;18loc[0]=0;19for(inti=1;i\u0026lt;=len;i++){20if(inp[i]==\u0026#39;1\u0026#39;)21sum++;22else23sum--;2425autoit=loc.find(sum);26if(it!=loc.end()){27ans=max(ans,i-it-\u0026gt;second);28}else{29loc[sum]=i;30}31}32printf(\u0026#34;%d\\n\u0026#34;,ans);3334return0;35} \n"
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/contest/codeforces/",
	"title": "Codeforces",
	"tags": [],
	"description": "Codeforces, where my passion nurtures",
	"content": "  Educational Rounds  Round 30    Rated Contests  Round 441    Gym  2016-2017 ACM-ICPC, Egyptian Collegiate Programming Contest (ECPC 16)     "
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/contest/",
	"title": "Contest",
	"tags": [],
	"description": "Programming contest",
	"content": "  Codeforces  Educational Rounds  Round 30    Rated Contests  Round 441    Gym  2016-2017 ACM-ICPC, Egyptian Collegiate Programming Contest (ECPC 16)     ITSA/PTC  October 11, 2017    Onsite competitions  NCPC 2016 Final   NCPC 2017 Preliminary Round     "
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/contest/itsa_ptc/oct2017/",
	"title": "October 11, 2017",
	"tags": ["ITSA", "PTC"],
	"description": "October 11, 2017 ITSA PTC contest",
	"content": "心得 新隊伍一起的第一場正式練習，表現還算可以啦。只是很久沒三人共用一台電腦，實在有點卡卡的。\n討論熱烈，希望可以維持。\n\n比賽題目   Attachments   ITSA.pdf  (222 kB)   PTC.pdf  (312 kB)     ITSA A 線性掃過去，遇到三的倍數就累加。\n1#include\u0026lt;bits/stdc++.h\u0026gt;23usingnamespacestd;45typedeflonglongll;67voidsolve()8{9intn;10scanf(\u0026#34;%d\u0026#34;,\u0026amp;n);1112llans=0;13for(inti=1;i\u0026lt;=n;i++)14if(i%3==0)15ans+=i;16printf(\u0026#34;%lld\\n\u0026#34;,ans);17}1819intmain()20{21intncase;22scanf(\u0026#34;%d\u0026#34;,\u0026amp;ncase);23while(ncase--)24solve();2526return0;27}  B 問問隊友 黃鈺程 陳煒杰\n1m=int(input())2for_inrange(m):3data=[0for_inrange(10001)]4n=int(input())5for_inrange(n):6a,b=map(int,input().split())7foriinrange(a,b):8data[i]=19print(sum(data)) \nC 基本上掌握對於 1-based 的 complete binary tree index 的性質即可:\n left child index = parent index * 2 right child index = parent index * 2 + 1  IO有點麻煩，各自實現吧！\n1#include\u0026lt;bits/stdc++.h\u0026gt;23usingnamespacestd;45typedeflonglongll;67#define lc(i) (i*2) 8#define rc(i) (i*2+1) 910voidsolve()11{12intC;13scanf(\u0026#34;%d\u0026#34;,\u0026amp;C);1415charinp[111];16scanf(\u0026#34;%s\u0026#34;,inp);1718intlen=strlen(inp);19// printf(\u0026#34;%s\\n\u0026#34;, inp); 2021inttree[111],idx=1;22for(inti=0;i\u0026lt;len;i++){23if(inp[i]==\u0026#39;(\u0026#39;){24intnum;25sscanf(inp+i+3,\u0026#34;%d\u0026#34;,\u0026amp;num);26// printf(\u0026#34;%s\\n\u0026#34;, inp + i); 2728tree[idx]=num;29idx++;30}31}3233/* 34for(int i = 1; i \u0026lt; idx; i++) 35printf(\u0026#34;%d %d\\n\u0026#34;, i, tree[i]); 36*/3738vector\u0026lt;string\u0026gt;ans;39for(inti=1;i\u0026lt;idx;i++){40if(lc(i)\u0026lt;idx\u0026amp;\u0026amp;abs(tree[i]-tree[lc(i)])\u0026lt;=C){41stringtmp=\u0026#34;\u0026#34;;42tmp+=\u0026#39;A\u0026#39;+(i-1);43tmp+=\u0026#39;A\u0026#39;+(lc(i)-1);4445ans.push_back(tmp);46}4748if(rc(i)\u0026lt;idx\u0026amp;\u0026amp;abs(tree[i]-tree[rc(i)])\u0026lt;=C){49stringtmp=\u0026#34;\u0026#34;;50tmp+=\u0026#39;A\u0026#39;+(i-1);51tmp+=\u0026#39;A\u0026#39;+(rc(i)-1);5253ans.push_back(tmp);54}5556}5758sort(ans.begin(),ans.end());59for(inti=0;i\u0026lt;(int)ans.size();i++){60printf(\u0026#34;%s%c\u0026#34;,ans[i].c_str(),i==(int)ans.size()-1?\u0026#39;\\n\u0026#39;:\u0026#39; \u0026#39;);61}62}6364intmain()65{66intncase;67scanf(\u0026#34;%d\u0026#34;,\u0026amp;ncase);68while(ncase--)69solve();7071return0;72} \nD 問問隊友 黃鈺程 陳煒杰\n1#include\u0026lt;bits/stdc++.h\u0026gt;2usingnamespacestd;34#define st first 5#define nd second 67typedefpair\u0026lt;int,int\u0026gt;pii;// \u0026lt;d, v\u0026gt; 8structEdge{9intto,w;10};1112constintMAX_V=1000;13constintINF=0x3f3f3f3f;1415intV;// V, Source 16vector\u0026lt;Edge\u0026gt;g[MAX_V];17intd[MAX_V][MAX_V];1819voiddijkstra(intS){20fill(d[S],d[S]+V,INF);21priority_queue\u0026lt;pii,vector\u0026lt;pii\u0026gt;,greater\u0026lt;pii\u0026gt;\u0026gt;pq;2223d[S][S]=0;24pq.push(pii(0,S));2526while(!pq.empty()){27piitop=pq.top();pq.pop();28intu=top.nd;2930if(d[S][u]\u0026lt;top.st)continue;3132// for (const Edge\u0026amp; e : g[u]) { 33for(size_ti=0;i\u0026lt;g[u].size();i++){34constEdge\u0026amp;e=g[u][i];35if(d[S][e.to]\u0026gt;d[S][u]+e.w){36d[S][e.to]=d[S][u]+e.w;37pq.push(pii(d[S][e.to],e.to));38}39}40}41}4243intmain(){44intN,M;45scanf(\u0026#34;%d\u0026#34;,\u0026amp;N);46scanf(\u0026#34;%d\u0026#34;,\u0026amp;M);47for(intu=0;u\u0026lt;M;u++){48for(intv=0;v\u0026lt;M;v++){49intw;scanf(\u0026#34;%d\u0026#34;,\u0026amp;w);50g[u].push_back(Edge{v,w});51}52}53V=M;54for(inti=0;i\u0026lt;N;i++){55intp,q;scanf(\u0026#34;%d %d\u0026#34;,\u0026amp;p,\u0026amp;q);56dijkstra(p);57printf(\u0026#34;%d\\n\u0026#34;,d[p][q]);58}59return0;60} \nE 比賽時想不出數學解，只好暴力去做，畢竟 $m, n$ 都至多 15而已。\n枚舉所有的可能放的數量，且只要枚舉 non-decreasing order 的數列來做排列組合即可。\n舉例而言，$m = 4, n = 2$的話，我們枚舉\n 1, 3 2, 2  但是 $3, 1$ 等等不枚舉，因為這個數列不是 non-decreasing order。\n有了數列 $a_1, a_2, \u0026hellip;, a_n$，之後就\u0026hellip;\n$C(m, a_1) * C(m - a_1, a_2) * \u0026hellip; * C(m - a_1 - a_2 - \u0026hellip; - a_{n - 1}, a_n)$\n記得，如果有多於一個相同的 $a_i$ 值，要除上 $(相同a_i個數)!$ ，因為我們不管排列方式。\n對於全部數列都累加上述算式即可。\n1#include\u0026lt;bits/stdc++.h\u0026gt;2usingnamespacestd;34typedeflonglongll;56lldp[16][16];7llC(lla,llb){8if(dp[a][b]!=-1)9returndp[a][b];10llans=1;11for(inti=1;i\u0026lt;=b;i++){12ans=ans*(a-i+1);13ans=ans/i;14}15returndp[a][b]=ans;16}1718llans=0;1920llfactorial[16];2122intsz[16];2324inttotal=0;25voiddfs(intpartition,intdepth,intrem)26{27if(rem\u0026lt;=0)28return;2930if(depth==partition-1){31// get last partition 32if(depth!=0\u0026amp;\u0026amp;rem\u0026lt;sz[depth-1])33return;3435sz[depth]=rem;3637// for(int i = 0; i \u0026lt; partition; i++) 38// printf(\u0026#34;%d%c\u0026#34;, sz[i], i == partition - 1 ? \u0026#39;\\n\u0026#39; : \u0026#39; \u0026#39;); 39// get ans 40intsum=total;41lltmp=1;4243intacc[16]={0};44for(inti=0;i\u0026lt;partition;i++){45tmp*=C(sum,sz[i]);46acc[sz[i]]++;47sum-=sz[i];48}49// printf(\u0026#34;tmp = %lld\\n\u0026#34;, tmp); 5051for(inti=0;i\u0026lt;16;i++){52if(acc[i]\u0026gt;1)53tmp/=factorial[acc[i]];54}55// printf(\u0026#34;tmp = %lld\\n\u0026#34;, tmp); 5657ans+=tmp;5859return;60}6162inti;63if(depth==0){64i=1;65}else{66i=sz[depth-1];67}6869for(;i\u0026lt;=rem;i++){70if(depth!=0\u0026amp;\u0026amp;i\u0026lt;sz[depth-1])71continue;72sz[depth]=i;73dfs(partition,depth+1,rem-i);74}75}7677voidsolve(intnum_cnt,intpartition)78{79// printf(\u0026#34;%d %d\\n\u0026#34;, num_cnt, partition); 80ans=0;8182total=num_cnt;83dfs(partition,0,num_cnt);8485// printf(\u0026#34;ans = %lld\\n\u0026#34;, ans); 86printf(\u0026#34;%lld\\n\u0026#34;,ans);87}8889intmain(){90intTC;scanf(\u0026#34;%d\u0026#34;,\u0026amp;TC);91memset(dp,-1,sizeof(dp));9293factorial[1]=1;94for(inti=2;i\u0026lt;=15;i++){95factorial[i]=factorial[i-1]*i;96}9798while(TC--){99intm,n;100scanf(\u0026#34;%d,%d\u0026#34;,\u0026amp;m,\u0026amp;n);101102solve(m,n);103}104105return0;106} \nPTC A 問問隊友 _陳煒杰_，聽說範測看完就解了！\n1#include\u0026lt;bits/stdc++.h\u0026gt;2usingnamespacestd;34intmain(){5intn;6scanf(\u0026#34; %d\u0026#34;,\u0026amp;n);7for(inti=0;i\u0026lt;n;i++){8intx;9scanf(\u0026#34; %d\u0026#34;,\u0026amp;x);10printf(\u0026#34;%d\\n\u0026#34;,x*6+(x-1)*2);11}12return0;13} \nB y值其實完全沒有意義\u0026hellip;..\n主要的觀察是，最早結束的區間一定要釘釘子。所以，就 greedy 的找切點啦！\n對結尾排序後，線性掃過去，如果下個線段起點比目前的切點小，不處理; 反之，切點向後移且切點總數+1\n1#include\u0026lt;bits/stdc++.h\u0026gt;2usingnamespacestd;34#define sz(x) (int(x.size())) 56inlineintgetint(){7intinp;scanf(\u0026#34;%d\u0026#34;,\u0026amp;inp);returninp;8}910structSeg{11ints,t;12booloperator\u0026lt;(constSeg\u0026amp;k)const{13returnt\u0026lt;k.t;14}15};16vector\u0026lt;Seg\u0026gt;segs;1718intsolve(){19// sort(segs.begin(), segs.end(), [\u0026amp;](const Seg\u0026amp; a, const Seg\u0026amp; b) { 20// if (a.t == b.t) { 21// return a.s \u0026lt; b.s; 22// } 23// return a.t \u0026lt; b.t; 24// }); 25sort(segs.begin(),segs.end());2627intans=1;28Segcur=segs[0];29for(inti=1;i\u0026lt;sz(segs);i++){30// printf(\u0026#34;(%d, %d): \u0026#34;, segs[i].s, segs[i].t); 31if(segs[i].s\u0026lt;cur.t){32// puts(\u0026#34;c\u0026#34;); 33continue;34}35else{36ans++;37// printf(\u0026#34;%d\\n\u0026#34;, ans); 38cur=segs[i];39}40}41returnans;42}4344intmain(){45intTC=getint();46while(TC--){47segs.clear();4849intN=getint();50for(inti=0;i\u0026lt;N;i++){51intl=getint();52intx=getint();53inty=getint();5455segs.push_back(Seg{x,x+l});56}57printf(\u0026#34;%d\\n\u0026#34;,solve());58}59return0;60} \nC 問問隊友 黃鈺程 陳煒杰\n1#include\u0026lt;bits/stdc++.h\u0026gt;2usingnamespacestd;34inlineintgetint(){5intinp;scanf(\u0026#34;%d\u0026#34;,\u0026amp;inp);returninp;6}78structEdge{9intto,cap,rev;10Edge(inta,intb,intc){11to=a;12cap=b;13rev=c;14}15};1617constintINF=0x3f3f3f3f;18constintMAX_V=400;19vector\u0026lt;Edge\u0026gt;g[MAX_V];20intlevel[MAX_V];21intiter[MAX_V];2223voidadd_edge(intu,intv,intcap){24g[u].push_back((Edge){v,cap,(int)g[v].size()});25g[v].push_back((Edge){u,0,(int)g[u].size()-1});26}2728voidbfs(ints){29memset(level,-1,sizeof(level));30queue\u0026lt;int\u0026gt;q;3132level[s]=0;33q.push(s);3435while(!q.empty()){36intv=q.front();q.pop();37for(inti=0;i\u0026lt;int(g[v].size());i++){38constEdge\u0026amp;e=g[v][i];39if(e.cap\u0026gt;0\u0026amp;\u0026amp;level[e.to]\u0026lt;0){40level[e.to]=level[v]+1;41q.push(e.to);42}43}44}45}4647intdfs(intv,intt,intf){48if(v==t)returnf;49for(int\u0026amp;i=iter[v];i\u0026lt;int(g[v].size());i++){50Edge\u0026amp;e=g[v][i];51if(e.cap\u0026gt;0\u0026amp;\u0026amp;level[v]\u0026lt;level[e.to]){52intd=dfs(e.to,t,min(f,e.cap));53if(d\u0026gt;0){54e.cap-=d;55g[e.to][e.rev].cap+=d;56returnd;57}58}59}60return0;61}6263intmax_flow(ints,intt){// dinic 64intflow=0;65for(;;){66bfs(s);67if(level[t]\u0026lt;0)returnflow;68memset(iter,0,sizeof(iter));69intf;70while((f=dfs(s,t,INF))\u0026gt;0){71flow+=f;72}73}74}7576intcnt[5];7778intmain(){79intTC=getint();80while(TC--){81for(intu=0;u\u0026lt;MAX_V;u++){82g[u].clear();83}8485for(inti=0;i\u0026lt;5;i++){86cnt[i]=getint();87}8889intN=getint();90ints_super=N+10;91intt_super=N+11;92for(inti=0;i\u0026lt;5;i++){93add_edge(s_super,i,cnt[i]);94}9596for(inti=0;i\u0026lt;N;i++){97chars1[5],s2[5];98scanf(\u0026#34;%s %s\u0026#34;,s1,s2);99intc1=s1[0]-\u0026#39;A\u0026#39;;100intc2=s2[0]-\u0026#39;A\u0026#39;;101102add_edge(c1,i+5,1);103add_edge(c2,i+5,1);104add_edge(i+5,t_super,1);105}106107intf=max_flow(s_super,t_super);108if(f==N){109puts(\u0026#34;YES\u0026#34;);110}111else{112puts(\u0026#34;NO\u0026#34;);113}114}115return0;116} \n"
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tools/hugo/hugo-setup/",
	"title": "Hugo Setup",
	"tags": ["Hugo", "Setup"],
	"description": "My setup notes for Hugo",
	"content": "Hugo is a very well-designed static site generator. The user experience is way better than what I have tried so far. One of the good things about Hugo is that the config file is very clean! Also, the installation is easy, version controlling it is quite simple, and it\u0026rsquo;s easy to share the source code and let people create post PR!\n\nInstall and Setup Hugo The quickstart guide on Hugo is pretty comprehensive. Please check it out!\n Install latest hugo version  On Linux: sudo snap install hugo On Mac: brew install hugo  Create a hugo site: hugo new site [sitename] By default, no theme is installed, so you need to install one on your own!\ncd [sitename];\\ git init;\\ git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke;\\ # Edit your config.toml configuration file and add the Ananke theme. echo 'theme = \u0026quot;ananke\u0026quot;' \u0026gt;\u0026gt; config.toml  Using git submodule is a very good idea since we can keep track of the separate projects version controlled by git easily.\n Add some content: hugo new posts/my-first-post.md. Notice that the draft mode by default is true, so it won\u0026rsquo;t be published unless you change it to false.\n .rst will work!  Start the development server: hugo server -D\n Open config.toml\n customize the site URL, title, etc. .toml reference  In order to let Github Pages to parse from docs folder:\n add publishDir = \u0026quot;docs\u0026quot; to config.toml add publishDir: docs to config.yaml  Run hugo to build it!\n Push the generated static pages to Github, and wait for Github Pages to build! Enjoy!! It\u0026rsquo;s that easy!\n  Cloning Hugo Site from Github  Make sure you have hugo installed. Installation can be checked by running hugo help Clone the repo Run git submodule init on project root and then run git submodule update to get the theme Run hugo server! You are done setting up!  Switching to DocDock Theme + My Personal Tweaks This theme provides searching, tagging, and lot\u0026rsquo;s of shortcodes out-of-the-box. Worth a try!\n Get the theme code: git submodule add https://github.com/vjeantet/hugo-theme-docdock.git themes/docdock Use the theme\u0026rsquo;s config file: cp themes/docdock/exampleSite/config.toml .:  Better run cp config.toml config.toml.bak first  Open config.toml:  Set theme = \u0026quot;docdock\u0026quot; Comment out themesdir = \u0026quot;../..\u0026quot;  Create a _index.md document in the content folder  Don\u0026rsquo;t forget to create a _index.md with title: and head: front matter!  Update files in archetypes folder:  Check front matter format Tweak and add your own files! It\u0026rsquo;s will be very handy to have some of your own!  Create a _header.md page in content folder. Its content is what you get in the logo placeholder (top left of the screen). Add a custon terms.html file to layouts/_default, for the tags and categories summary page to be rendered  MathJax support  Create a custom-head.html into a layouts/partials folder next to the content folder, this is where we should add the javascript code in every \u0026lt;head\u0026gt;. Paste the following code in to the file in order for MathJax and inline latex to work!\n\u0026lt;!-- Partial intended to be overwritten to add CSS --\u0026gt; \u0026lt;script type=\u0026quot;text/x-mathjax-config\u0026quot;\u0026gt; MathJax.Hub.Config({ tex2jax: {inlineMath: [['$','$'], ['\\\\(','\\\\)']]} }); \u0026lt;/script\u0026gt; \u0026lt;script type=\u0026quot;text/javascript\u0026quot; async src=\u0026quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=TeX-MML-AM_CHTML\u0026quot;\u0026gt; \u0026lt;/script\u0026gt;  Also, if you have Google Analytics tracking code, you can add it here.\n Check out the result $e = mc^2$ :)\n "
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/course/",
	"title": "Course Notes",
	"tags": [],
	"description": "",
	"content": "  CCU Competitive Programming 2017 Fall  PC2 在 Mac 上的使用方法   Linear function   Exam A Problem B     "
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/contest/codeforces/gym/",
	"title": "Gym",
	"tags": [],
	"description": "",
	"content": "  2016-2017 ACM-ICPC, Egyptian Collegiate Programming Contest (ECPC 16)    "
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/contest/itsa_ptc/",
	"title": "ITSA/PTC",
	"tags": [],
	"description": "Monthly cotest",
	"content": "  October 11, 2017    "
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tools/hugo/hugo-usage/",
	"title": "Hugo Usage",
	"tags": ["Hugo", "Setup"],
	"description": "My Hugo handy refernece",
	"content": " Useful Commands  hugo help: get Hugo documentation! hugo: generates the site to the destination folder hugo --cleanDestinationDir: remove files from destination not found in static directories  Creating a New Chapter  hugo new --kind chapter [path to file]/_index.md  Creating a New Article  Creater your own archetypes first! hugo new [path to post]/[post name].md: create a new post The one with the lower weight shows up first  Content Organization  All posts are contained in the content folder The folder hierarchy is the shape of the website\ncontent ├── level-one │ ├── level-two │ │ ├── level-three │ │ │ ├── level-four │ │ │ │ ├── _index.md │ │ │ │ ├── page-4-a.md │ │ │ │ ├── page-4-b.md │ │ │ │ └── page-4-c.md │ │ │ ├── _index.md │ │ │ ├── page-3-a.md │ │ │ ├── page-3-b.md │ │ │ └── page-3-c.md │ │ ├── _index.md │ │ ├── page-2-a.md │ │ ├── page-2-b.md │ │ └── page-2-c.md │ ├── _index.md │ ├── page-1-a.md │ ├── page-1-b.md │ └── page-1-c.md ├── _index.md └── page-top.md  Make sure that _index.md is present!\n  Tips for Writing Markdown  Hugo Docdock theme provides a lot of shortcodes! :) Here are a few useful ones:\n Codeblocks with line number  Use the following snippet  {{\u0026lt; highlight cpp \u0026quot;linenos=inline\u0026quot; \u0026gt;}} {{\u0026lt; / highlight \u0026gt;}}   Alerts\n{{% alert theme=\u0026quot;info\u0026quot; %}}**info**{{% /alert %}} {{% alert theme=\u0026quot;success\u0026quot; %}}**success**{{% /alert %}} {{% alert theme=\u0026quot;warning\u0026quot; %}}**warning**{{% /alert %}} {{% alert theme=\u0026quot;danger\u0026quot; %}}**danger**{{% /alert %}}  info success warning danger  Attachment\n markdown file: attachements must be place in a folder named like your page and ending with .files folder: attachements must be place in a nested files folder. Usage:\n{{%attachments title=\u0026quot;Related files\u0026quot; pattern=\u0026quot;.*(pdf|mp4)\u0026quot;/%}}   Expand\n{{% expand \u0026quot;Hint ?\u0026quot; %}}Here you go!{{% /expand%}}    Hint   Here you go!    Notice\n Must be padded to the left for the title to show up!  {{% notice note %}} Note {{% /notice %}}  Note\n {{% notice info %}} Info {{% /notice %}}  Info\n {{% notice tip %}} Tip {{% /notice %}}  Tip\n {{% notice warning %}} Warning {{% /notice %}}  Warning\n  panel\n success, default, primary, info, warning, danger  {{% panel theme=\u0026quot;success\u0026quot; header=\u0026quot;Title\u0026quot; %}}content{{% /panel %}}  Title content   revealjs\n  "
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/contest/onsite/",
	"title": "Onsite competitions",
	"tags": [],
	"description": "",
	"content": "  NCPC 2016 Final   NCPC 2017 Preliminary Round    "
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/course/ccu_competitive_programming_2017_fall/linear_function/",
	"title": "Linear function",
	"tags": ["Stack", "Implementation"],
	"description": "",
	"content": "\nProblem There are $n$ linear functions $f_i(x)=a[i]x+b[i], 1\u0026lt;= i \u0026lt;=n$. Define $F(x)=max{f_i(x) : 1\u0026lt;= i \u0026lt;=n}$.\nGiven $m$ x-values $c[1],c[2],…, c[m]$, please compute the sum of all $F(c[j])$, i.e., $F(c[1])+ F(c[2])+…+ F(c[m])$.\nSolution sketch To be continued\u0026hellip;\nAC Code 1#include\u0026lt;bits/stdc++.h\u0026gt;23usingnamespacestd;45typedeflonglongll;6typedefpair\u0026lt;ll,ll\u0026gt;ii;78boolcmp(constii\u0026amp;a,constii\u0026amp;b)9{10if(a.first==b.first)11returna.second\u0026gt;b.second;12returna.first\u0026lt;b.first;13}1415llcal(iicoeff,llx)16{17returncoeff.first*x+coeff.second;18}1920doublex_val(iia,iib)21{22return(b.second-a.second)/(a.first-b.first);23}2425#define EPS 1e-9 2627voidsolve(intn,intm)28{29iicoeff[n];30for(inti=0;i\u0026lt;n;i++)31scanf(\u0026#34;%lld %lld\u0026#34;,\u0026amp;coeff[i].first,\u0026amp;coeff[i].second);32llx[m];33for(inti=0;i\u0026lt;m;i++)34scanf(\u0026#34;%lld\u0026#34;,\u0026amp;x[i]);3536sort(coeff,coeff+n,cmp);37sort(x,x+m);3839vector\u0026lt;ii\u0026gt;ok;40ok.push_back(coeff[0]);41for(inti=1;i\u0026lt;n;i++){42while(ok.size()\u0026gt;1){43intsz=ok.size()-1;44if(ok[sz].first==coeff[i].first||(x_val(ok[sz],ok[sz-1])-x_val(ok[sz],coeff[i])\u0026gt;-EPS))45ok.pop_back();46else47break;48}49ok.push_back(coeff[i]);50}5152// for(auto i : ok) 53// printf(\u0026#34;%lld %lld\\n\u0026#34;, i.first, i.second); 5455llans=0;56intidx=0;57for(inti=0;i\u0026lt;m;i++){58while(idx!=(int)ok.size()-1\u0026amp;\u0026amp;59cal(ok[idx],x[i])\u0026lt;cal(ok[idx+1],x[i])){60idx++;61}62ans+=cal(ok[idx],x[i]);63}6465printf(\u0026#34;%lld\\n\u0026#34;,ans);66}6768intmain()69{70intn,m;71while(scanf(\u0026#34;%d %d\u0026#34;,\u0026amp;n,\u0026amp;m)==2\u0026amp;\u0026amp;(n!=0)){72solve(n,m);73}7475return0;76} "
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tools/",
	"title": "Tools",
	"tags": [],
	"description": "Great tools collection",
	"content": "PR is welcomed! Feel free to create some if you want to :)\nCheers~\n Hugo  Hugo Setup   Hugo Usage     "
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/contest/onsite/ncpc2016/",
	"title": "NCPC 2016 Final",
	"tags": ["NCPC", "Enumeration"],
	"description": "",
	"content": "充滿回憶的比賽，尤其是B QAQ\n\nB 簡單爆搜。\n  Hint   幾個1?\n    Solution     AC Code 1#include\u0026lt;bits/stdc++.h\u0026gt;23usingnamespacestd;45typedeflonglongll;67llsolve(lln)8{9if(n==2){10return1;11}1213intans=1;14llorig=n;15for(;ans\u0026lt;33;ans++){16n=orig;17llsum=ans;1819n-=ans;20for(inti=0;i\u0026lt;ans;i++){21if(n-(ans-i+1)==0)22returnans;23n-=sum+1;24sum+=sum+1;25}2627if(n\u0026lt;=sum+1)28break;29}3031returnans;32}3334intmain()35{36#ifndef DEBUG 37intncase;38scanf(\u0026#34;%d\u0026#34;,\u0026amp;ncase);39while(ncase--){40lln;41scanf(\u0026#34;%lld\u0026#34;,\u0026amp;n);42printf(\u0026#34;%lld\\n\u0026#34;,solve(n));43}44#else 45for(inti=2;i\u0026lt;=100;i++){46printf(\u0026#34;n = %d, %lld\\n\u0026#34;,i,solve(i));47}48#endif 4950return0;51} \n"
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/contest/onsite/ncpc2017preliminary/",
	"title": "NCPC 2017 Preliminary Round",
	"tags": ["NCPC", "Implementation", "Enumeration"],
	"description": "Problem E, what a pity!",
	"content": "\nProblem 比賽題目   Attachments   Problem A: Verify Collatz 3x \u0026#43; 1 Conjecture.pdf  (100 kB)   Problem B: Largest Three Companions.pdf  (69 kB)   Problem C: Data Recovery.pdf  (108 kB)   Problem D: Routing mode checking.pdf  (129 kB)   Problem E: Terrestrial Stations.pdf  (118 kB)   Problem F: Battle Calculator.pdf  (72 kB)   Problem G: Chaining.pdf  (109 kB)     A Just 3n + 1.\n1#include\u0026lt;bits/stdc++.h\u0026gt;2usingnamespacestd;34#define sz(x) (int(x.size())) 5typedeflonglongll;6typedefdoubledb;78intmain(){9llx;10while(scanf(\u0026#34; %lld\u0026#34;,\u0026amp;x)){11if(x==0)break;12printf(\u0026#34;%lld \u0026#34;,x);1314llmx=-1;15inti;16for(i=0;;i++){17if(x\u0026amp;1){18x=3*x+1;19}20else{21x=x/2;22}23mx=max(mx,x);24if(x==1){25break;26}27}2829printf(\u0026#34;%d %lld\\n\u0026#34;,i+1,mx);30}313233return0;34} \nB 1#include\u0026lt;bits/stdc++.h\u0026gt;23usingnamespacestd;45typedeflonglongll;67voidsolve()8{9intn;10scanf(\u0026#34;%d\u0026#34;,\u0026amp;n);1112intinp[n];13for(inti=0;i\u0026lt;n;i++){14scanf(\u0026#34;%d\u0026#34;,\u0026amp;inp[i]);15}1617sort(inp,inp+n);1819// implement 20// -------++++++++ 21llproduct=inp[0]*inp[1];22llans=LLONG_MIN;23for(inti=2;i\u0026lt;n;i++){24ans=max(ans,product*inp[i]);25}2627product=inp[n-1]*inp[n-2];28for(inti=0;i\u0026lt;n-2;i++){29ans=max(ans,product*inp[i]);30}3132printf(\u0026#34;%lld\\n\u0026#34;,ans);33}3435intmain()36{37intncase;38scanf(\u0026#34;%d\u0026#34;,\u0026amp;ncase);3940while(ncase--)41solve();4243return0;44} \nC Ahh\u0026hellip;\u0026hellip; We can\u0026rsquo;t do the math with mod inverse\u0026hellip; so we resort to enumeration\u0026hellip;\n1#include\u0026lt;bits/stdc++.h\u0026gt;23usingnamespacestd;45typedeflonglongll;6constllP=65537;78llx[3];9lly[3];10llcal(lla0,lla1,lla2,intwhich)11{12llx_2=x[which]*x[which]%P;13return(((a0+a1*x[which])%P+a2*x_2)%P);14}1516voidsolve()17{18for(inti=0;i\u0026lt;3;i++)19scanf(\u0026#34;%lld %lld\u0026#34;,\u0026amp;x[i],\u0026amp;y[i]);2021llx_2=(x[0]*x[0])%P;22for(lla1=0;a1\u0026lt;P;a1++){23for(lla2=0;a2\u0026lt;P;a2++){24lla0=5*P+y[0]-(a1*x[0])%P-(a2*x_2)%P;25a0%=P;26assert(cal(a0,a1,a2,0)==y[0]);2728if(cal(a0,a1,a2,1)==y[1]\u0026amp;\u0026amp;cal(a0,a1,a2,2)==y[2]){29printf(\u0026#34;%lld %lld %lld\\n\u0026#34;,a0,a1,a2);30return;31}32}33}34}3536intmain()37{38intncase;39scanf(\u0026#34;%d\u0026#34;,\u0026amp;ncase);4041while(ncase--)42solve();4344return0;45} \nD Problem statement contains error\u0026hellip;\u0026hellip;\u0026hellip;\u0026hellip;..\n1#include\u0026lt;bits/stdc++.h\u0026gt;2usingnamespacestd;34constintS=4;5constintINA=2;// inactive 6constintADA=0;7constintXY=1;8constintNON=3;// nonreachable 9constintACT=5;// active 1011intsx,sy;12intA[8][8];13intZ[8][8];1415boolxy_check(inttx,intty){16for(intx=min(sx,tx);x\u0026lt;=max(sx,tx);x++){17if(A[x][sy]==INA){18returnfalse;19}20}21for(inty=min(sy,ty);y\u0026lt;=max(sy,ty);y++){22if(A[tx][y]==INA){23returnfalse;24}25}26returntrue;27}2829boolada_check(inttx,intty){30for(intx=min(sx,tx);x\u0026lt;=max(sx,tx);x++){31for(inty=min(sy,ty);y\u0026lt;=max(sy,ty);y++){32if(A[x][y]==INA){33returnfalse;34}35}36}37returntrue;38}3940voidprint(inta[8][8]){41for(inty=0;y\u0026lt;8;y++){42for(intx=0;x\u0026lt;8;x++){43cout\u0026lt;\u0026lt;a[x][y];44}45cout\u0026lt;\u0026lt;endl;46}47}4849intmain(){50ios::sync_with_stdio(false);51cin.tie(0);5253strings;54while(cin\u0026gt;\u0026gt;s){55if(s==\u0026#34;0\u0026#34;)break;5657for(intx=0;x\u0026lt;8;x++){58for(inty=0;y\u0026lt;8;y++){59Z[x][y]=NON;60}61}6263for(inti=0;i\u0026lt;64;i++){64inty=i/8;65intx=i%8;66if(s[i]==\u0026#39;2\u0026#39;){67A[x][y]=S;68Z[x][y]=S;69sx=x;70sy=y;71}elseif(s[i]==\u0026#39;1\u0026#39;){72A[x][y]=INA;73Z[x][y]=INA;74}else{75A[x][y]=ACT;76}77}7879// print(A); 80// cout \u0026lt;\u0026lt; endl; 8182for(intx=0;x\u0026lt;8;x++){83for(inty=0;y\u0026lt;8;y++){84if(x==sx\u0026amp;\u0026amp;y==sy)continue;85if(xy_check(x,y)){86Z[x][y]=XY;87}88}89}9091for(intx=0;x\u0026lt;8;x++){92for(inty=0;y\u0026lt;8;y++){93if(x==sx\u0026amp;\u0026amp;y==sy)continue;94if(ada_check(x,y)){95Z[x][y]=ADA;96}97}98}99100for(inty=0;y\u0026lt;8;y++){101for(intx=0;x\u0026lt;8;x++){102cout\u0026lt;\u0026lt;Z[x][y];103}104}105cout\u0026lt;\u0026lt;endl;106107// print(Z); 108}109return0;110} \nG I know using graph for this one is overkill, but this is what makes us feel like 1 AC :)\n1#include\u0026lt;bits/stdc++.h\u0026gt;23usingnamespacestd;45#define N 10010 67typedefpair\u0026lt;int,int\u0026gt;ii;89voidsolve(intn)10{11intinp[n+1];12for(inti=1;i\u0026lt;=n;i++)13scanf(\u0026#34;%d\u0026#34;,\u0026amp;inp[i]);14// for(int i = 1; i \u0026lt;= n; i++) 15//printf(\u0026#34;%d%c\u0026#34;, inp[i], i == n ? \u0026#39;\\n\u0026#39; : \u0026#39; \u0026#39;); 1617vector\u0026lt;int\u0026gt;g[N];18intin[N]={0};19intout[N]={0};20for(inti=1;i\u0026lt;=n;i++){21g[i].push_back(inp[i]);22in[inp[i]]++;23out[i]++;24}2526vector\u0026lt;int\u0026gt;s;27for(inti=1;i\u0026lt;=n;i++){28if(in[i]==0)29s.push_back(i);30}3132vector\u0026lt;ii\u0026gt;ans;33for(inti=0;i\u0026lt;(int)s.size();i++){34intcnt=0;35intwho=s[i];36// printf(\u0026#34;cnt %d who %d\\n\u0026#34;, cnt, who); 37while((int)g[who].size()\u0026gt;0){38// printf(\u0026#34;cnt %d who %d\\n\u0026#34;, cnt, who); 39cnt++;40who=g[who][0];41}4243ans.push_back(ii(s[i],cnt));44}45sort(ans.begin(),ans.end());4647printf(\u0026#34;%d\u0026#34;,(int)ans.size());48for(inti=0;i\u0026lt;(int)ans.size();i++)49printf(\u0026#34; %d %d\u0026#34;,ans[i].first,ans[i].second);50printf(\u0026#34;\\n\u0026#34;);51}5253intmain()54{55intn;56while(scanf(\u0026#34;%d\u0026#34;,\u0026amp;n)==1\u0026amp;\u0026amp;n)57solve(n);5859return0;60} \n"
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/course/ccu_competitive_programming_2017_fall/exama_2/",
	"title": "Exam A Problem B",
	"tags": ["Math"],
	"description": "",
	"content": "費馬小定理應用題。\n在 $mod\\ p$ 底下，指數是對 $p - 1$ 取餘數。\n\nSolution sketch 費馬小定理為 $x^{p - 1} \\equiv 1 \\pmod{p}$\n如果要對 $x^y \\pmod p$ 的 $y$ 取餘數，我們令 $y = (p - 1)r + s$\n可以推得，\n$$ x^y \\equiv (x^{p - 1})^r(x)^s \\equiv 1^r(x)^s \\equiv x^s \\pmod p $$\n利用 $s = y \\% (p - 1)$ 可以得知，指數在 $\\pmod p$ 底下，是要 $mod\\ p - 1$ 而不是 $mod\\ p$\nAC Code 1Tobeadded... "
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/_header/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " Coding Notes\n"
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tags/bfs/",
	"title": "Bfs",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tags/codeforces/",
	"title": "Codeforces",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/categories/competitive-programming/",
	"title": "Competitive Programming",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tags/educational-round/",
	"title": "Educational Round",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tags/enumeration/",
	"title": "Enumeration",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tags/gym/",
	"title": "Gym",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tags/hugo/",
	"title": "Hugo",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/categories/hugo/",
	"title": "Hugo",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tags/implementation/",
	"title": "Implementation",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tags/itsa/",
	"title": "Itsa",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tags/linux/",
	"title": "Linux",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tags/mac/",
	"title": "Mac",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tags/math/",
	"title": "Math",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tags/ncpc/",
	"title": "Ncpc",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tags/observation/",
	"title": "Observation",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tags/pc2/",
	"title": "Pc2",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/categories/pc2/",
	"title": "Pc2",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tags/ptc/",
	"title": "Ptc",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tags/setup/",
	"title": "Setup",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tags/stack/",
	"title": "Stack",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://henrybear327.github.io/CodingNotes/tags/union-find/",
	"title": "Union Find",
	"tags": [],
	"description": "",
	"content": ""
}]